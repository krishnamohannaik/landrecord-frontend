# Generated by Django 5.1.6 on 2025-03-15 21:43

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import myapp.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='LandRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_id', models.CharField(default=myapp.models.generate_application_id, editable=False, max_length=12, unique=True)),
                ('survey_no', models.CharField(max_length=100, unique=True)),
                ('owner_name', models.CharField(max_length=100)),
                ('area', models.DecimalField(decimal_places=2, max_digits=12)),
                ('state', models.CharField(max_length=30)),
                ('district', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('pincode', models.CharField(max_length=6)),
                ('address', models.TextField()),
                ('documents', models.FileField(upload_to='documents/')),
                ('registered_date', models.DateField(auto_now_add=True)),
                ('status', models.CharField(default='Pending', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='LandRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nature', models.CharField(choices=[('electronic', 'Electronic'), ('physical', 'Physical')], default='electronic', max_length=10)),
                ('full_name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('aadhar_number', models.CharField(max_length=20)),
                ('dob', models.DateField()),
                ('owner_name', models.CharField(max_length=200)),
                ('survey_number', models.CharField(max_length=100)),
                ('area', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=300)),
                ('state', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=10)),
                ('document', models.FileField(blank=True, null=True, upload_to='documents/')),
                ('receipt', models.FileField(blank=True, null=True, upload_to='receipts/')),
                ('receipt_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='OwnershipTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_id', models.CharField(default=myapp.models.generate_transfer_id, editable=False, max_length=12, unique=True)),
                ('current_owner', models.CharField(max_length=100)),
                ('new_owner', models.CharField(max_length=100)),
                ('property_id', models.CharField(max_length=100)),
                ('transfer_reason', models.CharField(max_length=50)),
                ('transfer_details', models.TextField(blank=True)),
                ('transfer_docs', models.FileField(default='transfer_documents/new_code.pdf', upload_to='transfer_documents/')),
                ('status', models.CharField(default='Pending', max_length=20)),
                ('submission_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('individual', 'Individual'), ('official', 'Official')], default='individual', max_length=10)),
                ('middle_name', models.CharField(blank=True, max_length=150)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('aadhar', models.CharField(blank=True, max_length=12, null=True, unique=True)),
                ('address', models.TextField(blank=True)),
                ('designation', models.CharField(blank=True, max_length=50, null=True)),
                ('department', models.CharField(blank=True, max_length=50, null=True)),
                ('office_id', models.CharField(blank=True, max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LandApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_id', models.CharField(max_length=50, unique=True)),
                ('application_type', models.CharField(max_length=50)),
                ('survey_no', models.CharField(max_length=100)),
                ('current_owner', models.CharField(max_length=100)),
                ('status', models.CharField(default='Pending', max_length=50)),
                ('submitted_date', models.DateTimeField(auto_now_add=True)),
                ('documents', models.FileField(upload_to='application_docs/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
